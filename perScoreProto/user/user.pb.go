// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

/*
Package user is a generated protocol buffer package.

It is generated from these files:
	user.proto

It has these top-level messages:
	GetInterestRequest
	GetInterestResponse
	GetEntriesRequest
	GetEntriesResponse
	ApproveEntriesRequest
	ApproveEntriesResponse
*/
package user

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetInterestRequest struct {
	AuthToken string `protobuf:"bytes,1,opt,name=auth_token,json=authToken" json:"auth_token,omitempty"`
}

func (m *GetInterestRequest) Reset()                    { *m = GetInterestRequest{} }
func (m *GetInterestRequest) String() string            { return proto.CompactTextString(m) }
func (*GetInterestRequest) ProtoMessage()               {}
func (*GetInterestRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetInterestRequest) GetAuthToken() string {
	if m != nil {
		return m.AuthToken
	}
	return ""
}

type GetInterestResponse struct {
	Success    bool                            `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	Message    string                          `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Title      string                          `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Body       string                          `protobuf:"bytes,4,opt,name=body" json:"body,omitempty"`
	Categories []*GetInterestResponse_Category `protobuf:"bytes,5,rep,name=categories" json:"categories,omitempty"`
}

func (m *GetInterestResponse) Reset()                    { *m = GetInterestResponse{} }
func (m *GetInterestResponse) String() string            { return proto.CompactTextString(m) }
func (*GetInterestResponse) ProtoMessage()               {}
func (*GetInterestResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetInterestResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *GetInterestResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetInterestResponse) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *GetInterestResponse) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *GetInterestResponse) GetCategories() []*GetInterestResponse_Category {
	if m != nil {
		return m.Categories
	}
	return nil
}

type GetInterestResponse_Category struct {
	Id          int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	WeightRange string `protobuf:"bytes,3,opt,name=weight_range,json=weightRange" json:"weight_range,omitempty"`
	Parent      int32  `protobuf:"varint,4,opt,name=parent" json:"parent,omitempty"`
	Level       int32  `protobuf:"varint,5,opt,name=level" json:"level,omitempty"`
}

func (m *GetInterestResponse_Category) Reset()                    { *m = GetInterestResponse_Category{} }
func (m *GetInterestResponse_Category) String() string            { return proto.CompactTextString(m) }
func (*GetInterestResponse_Category) ProtoMessage()               {}
func (*GetInterestResponse_Category) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *GetInterestResponse_Category) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GetInterestResponse_Category) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetInterestResponse_Category) GetWeightRange() string {
	if m != nil {
		return m.WeightRange
	}
	return ""
}

func (m *GetInterestResponse_Category) GetParent() int32 {
	if m != nil {
		return m.Parent
	}
	return 0
}

func (m *GetInterestResponse_Category) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

type GetEntriesRequest struct {
	AuthToken string `protobuf:"bytes,1,opt,name=auth_token,json=authToken" json:"auth_token,omitempty"`
}

func (m *GetEntriesRequest) Reset()                    { *m = GetEntriesRequest{} }
func (m *GetEntriesRequest) String() string            { return proto.CompactTextString(m) }
func (*GetEntriesRequest) ProtoMessage()               {}
func (*GetEntriesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetEntriesRequest) GetAuthToken() string {
	if m != nil {
		return m.AuthToken
	}
	return ""
}

type GetEntriesResponse struct {
	Success    bool                           `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	Message    string                         `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Categories []*GetEntriesResponse_Category `protobuf:"bytes,3,rep,name=categories" json:"categories,omitempty"`
	Questions  []*GetEntriesResponse_Question `protobuf:"bytes,4,rep,name=questions" json:"questions,omitempty"`
}

func (m *GetEntriesResponse) Reset()                    { *m = GetEntriesResponse{} }
func (m *GetEntriesResponse) String() string            { return proto.CompactTextString(m) }
func (*GetEntriesResponse) ProtoMessage()               {}
func (*GetEntriesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetEntriesResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *GetEntriesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetEntriesResponse) GetCategories() []*GetEntriesResponse_Category {
	if m != nil {
		return m.Categories
	}
	return nil
}

func (m *GetEntriesResponse) GetQuestions() []*GetEntriesResponse_Question {
	if m != nil {
		return m.Questions
	}
	return nil
}

type GetEntriesResponse_Category struct {
	Id          int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	WeightRange string `protobuf:"bytes,3,opt,name=weight_range,json=weightRange" json:"weight_range,omitempty"`
	Parent      int32  `protobuf:"varint,4,opt,name=parent" json:"parent,omitempty"`
	Level       int32  `protobuf:"varint,5,opt,name=level" json:"level,omitempty"`
}

func (m *GetEntriesResponse_Category) Reset()                    { *m = GetEntriesResponse_Category{} }
func (m *GetEntriesResponse_Category) String() string            { return proto.CompactTextString(m) }
func (*GetEntriesResponse_Category) ProtoMessage()               {}
func (*GetEntriesResponse_Category) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3, 0} }

func (m *GetEntriesResponse_Category) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GetEntriesResponse_Category) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetEntriesResponse_Category) GetWeightRange() string {
	if m != nil {
		return m.WeightRange
	}
	return ""
}

func (m *GetEntriesResponse_Category) GetParent() int32 {
	if m != nil {
		return m.Parent
	}
	return 0
}

func (m *GetEntriesResponse_Category) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

type GetEntriesResponse_Question struct {
	Id    int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Body  string `protobuf:"bytes,3,opt,name=body" json:"body,omitempty"`
}

func (m *GetEntriesResponse_Question) Reset()                    { *m = GetEntriesResponse_Question{} }
func (m *GetEntriesResponse_Question) String() string            { return proto.CompactTextString(m) }
func (*GetEntriesResponse_Question) ProtoMessage()               {}
func (*GetEntriesResponse_Question) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3, 1} }

func (m *GetEntriesResponse_Question) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GetEntriesResponse_Question) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *GetEntriesResponse_Question) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type GetEntriesResponse_Question_Answer struct {
	Option1 string `protobuf:"bytes,1,opt,name=option1" json:"option1,omitempty"`
	Option2 string `protobuf:"bytes,2,opt,name=option2" json:"option2,omitempty"`
	Option3 string `protobuf:"bytes,3,opt,name=option3" json:"option3,omitempty"`
	Option4 string `protobuf:"bytes,4,opt,name=option4" json:"option4,omitempty"`
	Option5 string `protobuf:"bytes,5,opt,name=option5" json:"option5,omitempty"`
}

func (m *GetEntriesResponse_Question_Answer) Reset()         { *m = GetEntriesResponse_Question_Answer{} }
func (m *GetEntriesResponse_Question_Answer) String() string { return proto.CompactTextString(m) }
func (*GetEntriesResponse_Question_Answer) ProtoMessage()    {}
func (*GetEntriesResponse_Question_Answer) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{3, 1, 0}
}

func (m *GetEntriesResponse_Question_Answer) GetOption1() string {
	if m != nil {
		return m.Option1
	}
	return ""
}

func (m *GetEntriesResponse_Question_Answer) GetOption2() string {
	if m != nil {
		return m.Option2
	}
	return ""
}

func (m *GetEntriesResponse_Question_Answer) GetOption3() string {
	if m != nil {
		return m.Option3
	}
	return ""
}

func (m *GetEntriesResponse_Question_Answer) GetOption4() string {
	if m != nil {
		return m.Option4
	}
	return ""
}

func (m *GetEntriesResponse_Question_Answer) GetOption5() string {
	if m != nil {
		return m.Option5
	}
	return ""
}

type ApproveEntriesRequest struct {
	AuthToken  string                            `protobuf:"bytes,1,opt,name=auth_token,json=authToken" json:"auth_token,omitempty"`
	Categories []*ApproveEntriesRequest_Category `protobuf:"bytes,3,rep,name=categories" json:"categories,omitempty"`
	Questions  []*ApproveEntriesRequest_Question `protobuf:"bytes,4,rep,name=questions" json:"questions,omitempty"`
}

func (m *ApproveEntriesRequest) Reset()                    { *m = ApproveEntriesRequest{} }
func (m *ApproveEntriesRequest) String() string            { return proto.CompactTextString(m) }
func (*ApproveEntriesRequest) ProtoMessage()               {}
func (*ApproveEntriesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ApproveEntriesRequest) GetAuthToken() string {
	if m != nil {
		return m.AuthToken
	}
	return ""
}

func (m *ApproveEntriesRequest) GetCategories() []*ApproveEntriesRequest_Category {
	if m != nil {
		return m.Categories
	}
	return nil
}

func (m *ApproveEntriesRequest) GetQuestions() []*ApproveEntriesRequest_Question {
	if m != nil {
		return m.Questions
	}
	return nil
}

type ApproveEntriesRequest_Category struct {
	Id       int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Approved bool  `protobuf:"varint,2,opt,name=approved" json:"approved,omitempty"`
}

func (m *ApproveEntriesRequest_Category) Reset()         { *m = ApproveEntriesRequest_Category{} }
func (m *ApproveEntriesRequest_Category) String() string { return proto.CompactTextString(m) }
func (*ApproveEntriesRequest_Category) ProtoMessage()    {}
func (*ApproveEntriesRequest_Category) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{4, 0}
}

func (m *ApproveEntriesRequest_Category) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ApproveEntriesRequest_Category) GetApproved() bool {
	if m != nil {
		return m.Approved
	}
	return false
}

type ApproveEntriesRequest_Question struct {
	Id       int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Approved bool  `protobuf:"varint,2,opt,name=approved" json:"approved,omitempty"`
}

func (m *ApproveEntriesRequest_Question) Reset()         { *m = ApproveEntriesRequest_Question{} }
func (m *ApproveEntriesRequest_Question) String() string { return proto.CompactTextString(m) }
func (*ApproveEntriesRequest_Question) ProtoMessage()    {}
func (*ApproveEntriesRequest_Question) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{4, 1}
}

func (m *ApproveEntriesRequest_Question) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ApproveEntriesRequest_Question) GetApproved() bool {
	if m != nil {
		return m.Approved
	}
	return false
}

type ApproveEntriesResponse struct {
	Success    bool                               `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	Message    string                             `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Categories []*ApproveEntriesResponse_Category `protobuf:"bytes,3,rep,name=categories" json:"categories,omitempty"`
	Questions  []*ApproveEntriesResponse_Question `protobuf:"bytes,4,rep,name=questions" json:"questions,omitempty"`
}

func (m *ApproveEntriesResponse) Reset()                    { *m = ApproveEntriesResponse{} }
func (m *ApproveEntriesResponse) String() string            { return proto.CompactTextString(m) }
func (*ApproveEntriesResponse) ProtoMessage()               {}
func (*ApproveEntriesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ApproveEntriesResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *ApproveEntriesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ApproveEntriesResponse) GetCategories() []*ApproveEntriesResponse_Category {
	if m != nil {
		return m.Categories
	}
	return nil
}

func (m *ApproveEntriesResponse) GetQuestions() []*ApproveEntriesResponse_Question {
	if m != nil {
		return m.Questions
	}
	return nil
}

type ApproveEntriesResponse_Category struct {
	Id          int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	WeightRange string `protobuf:"bytes,3,opt,name=weight_range,json=weightRange" json:"weight_range,omitempty"`
	Parent      int32  `protobuf:"varint,4,opt,name=parent" json:"parent,omitempty"`
	Level       int32  `protobuf:"varint,5,opt,name=level" json:"level,omitempty"`
}

func (m *ApproveEntriesResponse_Category) Reset()         { *m = ApproveEntriesResponse_Category{} }
func (m *ApproveEntriesResponse_Category) String() string { return proto.CompactTextString(m) }
func (*ApproveEntriesResponse_Category) ProtoMessage()    {}
func (*ApproveEntriesResponse_Category) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{5, 0}
}

func (m *ApproveEntriesResponse_Category) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ApproveEntriesResponse_Category) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ApproveEntriesResponse_Category) GetWeightRange() string {
	if m != nil {
		return m.WeightRange
	}
	return ""
}

func (m *ApproveEntriesResponse_Category) GetParent() int32 {
	if m != nil {
		return m.Parent
	}
	return 0
}

func (m *ApproveEntriesResponse_Category) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

type ApproveEntriesResponse_Question struct {
	Id    int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Body  string `protobuf:"bytes,3,opt,name=body" json:"body,omitempty"`
}

func (m *ApproveEntriesResponse_Question) Reset()         { *m = ApproveEntriesResponse_Question{} }
func (m *ApproveEntriesResponse_Question) String() string { return proto.CompactTextString(m) }
func (*ApproveEntriesResponse_Question) ProtoMessage()    {}
func (*ApproveEntriesResponse_Question) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{5, 1}
}

func (m *ApproveEntriesResponse_Question) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ApproveEntriesResponse_Question) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ApproveEntriesResponse_Question) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type ApproveEntriesResponse_Question_Answer struct {
	Option1 string `protobuf:"bytes,1,opt,name=option1" json:"option1,omitempty"`
	Option2 string `protobuf:"bytes,2,opt,name=option2" json:"option2,omitempty"`
	Option3 string `protobuf:"bytes,3,opt,name=option3" json:"option3,omitempty"`
	Option4 string `protobuf:"bytes,4,opt,name=option4" json:"option4,omitempty"`
	Option5 string `protobuf:"bytes,5,opt,name=option5" json:"option5,omitempty"`
}

func (m *ApproveEntriesResponse_Question_Answer) Reset() {
	*m = ApproveEntriesResponse_Question_Answer{}
}
func (m *ApproveEntriesResponse_Question_Answer) String() string { return proto.CompactTextString(m) }
func (*ApproveEntriesResponse_Question_Answer) ProtoMessage()    {}
func (*ApproveEntriesResponse_Question_Answer) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{5, 1, 0}
}

func (m *ApproveEntriesResponse_Question_Answer) GetOption1() string {
	if m != nil {
		return m.Option1
	}
	return ""
}

func (m *ApproveEntriesResponse_Question_Answer) GetOption2() string {
	if m != nil {
		return m.Option2
	}
	return ""
}

func (m *ApproveEntriesResponse_Question_Answer) GetOption3() string {
	if m != nil {
		return m.Option3
	}
	return ""
}

func (m *ApproveEntriesResponse_Question_Answer) GetOption4() string {
	if m != nil {
		return m.Option4
	}
	return ""
}

func (m *ApproveEntriesResponse_Question_Answer) GetOption5() string {
	if m != nil {
		return m.Option5
	}
	return ""
}

func init() {
	proto.RegisterType((*GetInterestRequest)(nil), "user.GetInterestRequest")
	proto.RegisterType((*GetInterestResponse)(nil), "user.GetInterestResponse")
	proto.RegisterType((*GetInterestResponse_Category)(nil), "user.GetInterestResponse.Category")
	proto.RegisterType((*GetEntriesRequest)(nil), "user.GetEntriesRequest")
	proto.RegisterType((*GetEntriesResponse)(nil), "user.GetEntriesResponse")
	proto.RegisterType((*GetEntriesResponse_Category)(nil), "user.GetEntriesResponse.Category")
	proto.RegisterType((*GetEntriesResponse_Question)(nil), "user.GetEntriesResponse.Question")
	proto.RegisterType((*GetEntriesResponse_Question_Answer)(nil), "user.GetEntriesResponse.Question.Answer")
	proto.RegisterType((*ApproveEntriesRequest)(nil), "user.ApproveEntriesRequest")
	proto.RegisterType((*ApproveEntriesRequest_Category)(nil), "user.ApproveEntriesRequest.Category")
	proto.RegisterType((*ApproveEntriesRequest_Question)(nil), "user.ApproveEntriesRequest.Question")
	proto.RegisterType((*ApproveEntriesResponse)(nil), "user.ApproveEntriesResponse")
	proto.RegisterType((*ApproveEntriesResponse_Category)(nil), "user.ApproveEntriesResponse.Category")
	proto.RegisterType((*ApproveEntriesResponse_Question)(nil), "user.ApproveEntriesResponse.Question")
	proto.RegisterType((*ApproveEntriesResponse_Question_Answer)(nil), "user.ApproveEntriesResponse.Question.Answer")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for User service

type UserClient interface {
	// Respond on login
	GetInterests(ctx context.Context, in *GetInterestRequest, opts ...grpc.CallOption) (*GetInterestResponse, error)
	// Admins can view entries
	GetEntries(ctx context.Context, in *GetEntriesRequest, opts ...grpc.CallOption) (*GetEntriesResponse, error)
	// Admins can approve entries
	ApproveEntries(ctx context.Context, in *ApproveEntriesRequest, opts ...grpc.CallOption) (*ApproveEntriesResponse, error)
}

type userClient struct {
	cc *grpc.ClientConn
}

func NewUserClient(cc *grpc.ClientConn) UserClient {
	return &userClient{cc}
}

func (c *userClient) GetInterests(ctx context.Context, in *GetInterestRequest, opts ...grpc.CallOption) (*GetInterestResponse, error) {
	out := new(GetInterestResponse)
	err := grpc.Invoke(ctx, "/user.User/GetInterests", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) GetEntries(ctx context.Context, in *GetEntriesRequest, opts ...grpc.CallOption) (*GetEntriesResponse, error) {
	out := new(GetEntriesResponse)
	err := grpc.Invoke(ctx, "/user.User/GetEntries", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) ApproveEntries(ctx context.Context, in *ApproveEntriesRequest, opts ...grpc.CallOption) (*ApproveEntriesResponse, error) {
	out := new(ApproveEntriesResponse)
	err := grpc.Invoke(ctx, "/user.User/ApproveEntries", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for User service

type UserServer interface {
	// Respond on login
	GetInterests(context.Context, *GetInterestRequest) (*GetInterestResponse, error)
	// Admins can view entries
	GetEntries(context.Context, *GetEntriesRequest) (*GetEntriesResponse, error)
	// Admins can approve entries
	ApproveEntries(context.Context, *ApproveEntriesRequest) (*ApproveEntriesResponse, error)
}

func RegisterUserServer(s *grpc.Server, srv UserServer) {
	s.RegisterService(&_User_serviceDesc, srv)
}

func _User_GetInterests_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInterestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).GetInterests(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.User/GetInterests",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).GetInterests(ctx, req.(*GetInterestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_GetEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEntriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).GetEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.User/GetEntries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).GetEntries(ctx, req.(*GetEntriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_ApproveEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApproveEntriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).ApproveEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.User/ApproveEntries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).ApproveEntries(ctx, req.(*ApproveEntriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _User_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user.User",
	HandlerType: (*UserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetInterests",
			Handler:    _User_GetInterests_Handler,
		},
		{
			MethodName: "GetEntries",
			Handler:    _User_GetEntries_Handler,
		},
		{
			MethodName: "ApproveEntries",
			Handler:    _User_ApproveEntries_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}

func init() { proto.RegisterFile("user.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 551 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x56, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x8d, 0x1d, 0x3b, 0x38, 0xd3, 0xaa, 0x12, 0x03, 0x94, 0xc5, 0x80, 0xd4, 0x5a, 0x20, 0xf5,
	0x14, 0x89, 0x84, 0x72, 0x45, 0x69, 0x89, 0x2a, 0x0e, 0x1c, 0xb0, 0xe0, 0x5c, 0xb9, 0xc9, 0x28,
	0xb5, 0x48, 0x6d, 0xe3, 0xdd, 0xb4, 0xea, 0x89, 0x3b, 0x7f, 0xc1, 0x07, 0x20, 0x71, 0xe4, 0x37,
	0xf8, 0x02, 0x7e, 0x05, 0xed, 0xda, 0x6b, 0x37, 0xcd, 0xc6, 0x80, 0x22, 0xc1, 0xa5, 0xb7, 0x7d,
	0x33, 0x99, 0xf1, 0xdb, 0x37, 0x6f, 0x77, 0x03, 0x30, 0xe7, 0x94, 0xf7, 0xb2, 0x3c, 0x15, 0x29,
	0x3a, 0x72, 0x1d, 0x0c, 0x00, 0x8f, 0x48, 0xbc, 0x4e, 0x04, 0xe5, 0xc4, 0x45, 0x48, 0x1f, 0xe7,
	0xc4, 0x05, 0x3e, 0x06, 0x88, 0xe6, 0xe2, 0xf4, 0x58, 0xa4, 0x1f, 0x28, 0x61, 0xd6, 0x8e, 0xb5,
	0xd7, 0x0d, 0xbb, 0x32, 0xf2, 0x4e, 0x06, 0x82, 0xef, 0x36, 0xdc, 0x59, 0xa8, 0xe2, 0x59, 0x9a,
	0x70, 0x42, 0x06, 0xb7, 0xf8, 0x7c, 0x3c, 0x26, 0xce, 0x55, 0x8d, 0x17, 0x6a, 0x28, 0x33, 0x67,
	0xc4, 0x79, 0x34, 0x25, 0x66, 0xab, 0x6e, 0x1a, 0xe2, 0x5d, 0x70, 0x45, 0x2c, 0x66, 0xc4, 0xda,
	0x2a, 0x5e, 0x00, 0x44, 0x70, 0x4e, 0xd2, 0xc9, 0x25, 0x73, 0x54, 0x50, 0xad, 0xf1, 0x00, 0x60,
	0x1c, 0x09, 0x9a, 0xa6, 0x79, 0x4c, 0x9c, 0xb9, 0x3b, 0xed, 0xbd, 0x8d, 0x7e, 0xd0, 0x53, 0x3b,
	0x32, 0x90, 0xe9, 0x1d, 0x16, 0xbf, 0xbd, 0x0c, 0xaf, 0x54, 0xf9, 0x9f, 0xc0, 0xd3, 0x71, 0xdc,
	0x02, 0x3b, 0x9e, 0x28, 0xa2, 0x6e, 0x68, 0xc7, 0x13, 0xf9, 0xcd, 0x24, 0x3a, 0xd3, 0x04, 0xd5,
	0x1a, 0x77, 0x61, 0xf3, 0x82, 0xe2, 0xe9, 0xa9, 0x38, 0xce, 0xa3, 0x64, 0xaa, 0x49, 0x6e, 0x14,
	0xb1, 0x50, 0x86, 0x70, 0x1b, 0x3a, 0x59, 0x94, 0x53, 0x22, 0x14, 0x59, 0x37, 0x2c, 0x91, 0xdc,
	0xd8, 0x8c, 0xce, 0x69, 0xc6, 0x5c, 0x15, 0x2e, 0x40, 0xd0, 0x87, 0xdb, 0x47, 0x24, 0x46, 0x89,
	0x90, 0x74, 0xfe, 0x50, 0xee, 0x2f, 0x8e, 0x1a, 0x52, 0x55, 0xb4, 0x86, 0xda, 0xc3, 0x05, 0x0d,
	0xdb, 0x4a, 0xc3, 0xdd, 0x4a, 0xc3, 0x6b, 0x5f, 0x30, 0x4a, 0x88, 0x2f, 0xa1, 0xab, 0x58, 0xc7,
	0x69, 0xc2, 0x99, 0xf3, 0x9b, 0x0e, 0x6f, 0xcb, 0x5f, 0x86, 0x75, 0xcd, 0x7f, 0x9f, 0x81, 0xff,
	0xc3, 0x02, 0x4f, 0x13, 0x5b, 0x62, 0x50, 0xf9, 0xd1, 0x36, 0xf9, 0xb1, 0x5d, 0xfb, 0xd1, 0xff,
	0x6c, 0x41, 0x67, 0x98, 0xf0, 0x0b, 0xca, 0xa5, 0xe0, 0x69, 0x26, 0xdb, 0x3d, 0x2b, 0xa7, 0xa7,
	0x61, 0x9d, 0xe9, 0xeb, 0x51, 0x94, 0xb0, 0xce, 0x0c, 0xca, 0xae, 0x1a, 0xd6, 0x99, 0xe7, 0xa5,
	0xff, 0x35, 0xac, 0x33, 0xfb, 0x6a, 0x47, 0x55, 0x66, 0x3f, 0xf8, 0x66, 0xc3, 0xbd, 0x61, 0x96,
	0xe5, 0xe9, 0x39, 0xfd, 0x95, 0xb9, 0xf0, 0x95, 0xc1, 0x11, 0x4f, 0x8a, 0x79, 0x1a, 0xfb, 0x99,
	0x4d, 0x71, 0xb0, 0x6c, 0x8a, 0xc6, 0x26, 0x26, 0x5f, 0xbc, 0x68, 0xf0, 0x85, 0x0f, 0x5e, 0x54,
	0x34, 0x9a, 0x28, 0x1d, 0xbd, 0xb0, 0xc2, 0xb2, 0x6e, 0xe5, 0x34, 0x1b, 0xea, 0x82, 0xaf, 0x0e,
	0x6c, 0x5f, 0x67, 0xb7, 0xc6, 0xd1, 0x1a, 0x19, 0x84, 0x7c, 0x6a, 0xd6, 0xa0, 0xe9, 0x78, 0x1d,
	0x2e, 0x2b, 0xd9, 0xdc, 0xe5, 0xe6, 0x88, 0xfd, 0x9b, 0x23, 0xd6, 0xff, 0x69, 0x81, 0xf3, 0x9e,
	0x53, 0x8e, 0x23, 0xd8, 0xbc, 0xf2, 0xe0, 0x70, 0x64, 0x86, 0x47, 0x48, 0xcd, 0xc2, 0x7f, 0xb0,
	0xf2, 0x79, 0x0a, 0x5a, 0xf2, 0x2e, 0xae, 0x6f, 0x4c, 0xbc, 0xbf, 0x7c, 0x87, 0x16, 0x3d, 0xd8,
	0xaa, 0xcb, 0x35, 0x68, 0xe1, 0x1b, 0xd8, 0x5a, 0x74, 0x05, 0x3e, 0x6c, 0x38, 0x75, 0xfe, 0xa3,
	0x26, 0x23, 0x05, 0xad, 0x93, 0x8e, 0xfa, 0x67, 0x30, 0xf8, 0x15, 0x00, 0x00, 0xff, 0xff, 0x81,
	0xd3, 0xfd, 0x1c, 0x27, 0x08, 0x00, 0x00,
}
