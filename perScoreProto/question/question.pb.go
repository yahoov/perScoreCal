// Code generated by protoc-gen-go. DO NOT EDIT.
// source: question.proto

/*
Package question is a generated protocol buffer package.

It is generated from these files:
	question.proto

It has these top-level messages:
	CreateQuestionRequest
	CreateQuestionResponse
	GetQuestionRequest
	GetQuestionResponse
*/
package question

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateQuestionRequest struct {
	AuthToken  string                            `protobuf:"bytes,1,opt,name=auth_token,json=authToken" json:"auth_token,omitempty"`
	Title      string                            `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Body       string                            `protobuf:"bytes,3,opt,name=body" json:"body,omitempty"`
	Answer     *CreateQuestionRequest_Answer     `protobuf:"bytes,4,opt,name=answer" json:"answer,omitempty"`
	Weight     *CreateQuestionRequest_Weight     `protobuf:"bytes,5,opt,name=weight" json:"weight,omitempty"`
	Categories []*CreateQuestionRequest_Category `protobuf:"bytes,6,rep,name=categories" json:"categories,omitempty"`
}

func (m *CreateQuestionRequest) Reset()                    { *m = CreateQuestionRequest{} }
func (m *CreateQuestionRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateQuestionRequest) ProtoMessage()               {}
func (*CreateQuestionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CreateQuestionRequest) GetAuthToken() string {
	if m != nil {
		return m.AuthToken
	}
	return ""
}

func (m *CreateQuestionRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CreateQuestionRequest) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *CreateQuestionRequest) GetAnswer() *CreateQuestionRequest_Answer {
	if m != nil {
		return m.Answer
	}
	return nil
}

func (m *CreateQuestionRequest) GetWeight() *CreateQuestionRequest_Weight {
	if m != nil {
		return m.Weight
	}
	return nil
}

func (m *CreateQuestionRequest) GetCategories() []*CreateQuestionRequest_Category {
	if m != nil {
		return m.Categories
	}
	return nil
}

type CreateQuestionRequest_Answer struct {
	Option1    string                                   `protobuf:"bytes,1,opt,name=option1" json:"option1,omitempty"`
	Option2    string                                   `protobuf:"bytes,2,opt,name=option2" json:"option2,omitempty"`
	Option3    string                                   `protobuf:"bytes,3,opt,name=option3" json:"option3,omitempty"`
	Option4    string                                   `protobuf:"bytes,4,opt,name=option4" json:"option4,omitempty"`
	Option5    string                                   `protobuf:"bytes,5,opt,name=option5" json:"option5,omitempty"`
	Weights    []*CreateQuestionRequest_Answer_Weight   `protobuf:"bytes,6,rep,name=weights" json:"weights,omitempty"`
	Categories []*CreateQuestionRequest_Answer_Category `protobuf:"bytes,7,rep,name=categories" json:"categories,omitempty"`
}

func (m *CreateQuestionRequest_Answer) Reset()                    { *m = CreateQuestionRequest_Answer{} }
func (m *CreateQuestionRequest_Answer) String() string            { return proto.CompactTextString(m) }
func (*CreateQuestionRequest_Answer) ProtoMessage()               {}
func (*CreateQuestionRequest_Answer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *CreateQuestionRequest_Answer) GetOption1() string {
	if m != nil {
		return m.Option1
	}
	return ""
}

func (m *CreateQuestionRequest_Answer) GetOption2() string {
	if m != nil {
		return m.Option2
	}
	return ""
}

func (m *CreateQuestionRequest_Answer) GetOption3() string {
	if m != nil {
		return m.Option3
	}
	return ""
}

func (m *CreateQuestionRequest_Answer) GetOption4() string {
	if m != nil {
		return m.Option4
	}
	return ""
}

func (m *CreateQuestionRequest_Answer) GetOption5() string {
	if m != nil {
		return m.Option5
	}
	return ""
}

func (m *CreateQuestionRequest_Answer) GetWeights() []*CreateQuestionRequest_Answer_Weight {
	if m != nil {
		return m.Weights
	}
	return nil
}

func (m *CreateQuestionRequest_Answer) GetCategories() []*CreateQuestionRequest_Answer_Category {
	if m != nil {
		return m.Categories
	}
	return nil
}

type CreateQuestionRequest_Answer_Category struct {
	Id         int32                                    `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name       string                                   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Option     int32                                    `protobuf:"varint,3,opt,name=option" json:"option,omitempty"`
	Parent     int32                                    `protobuf:"varint,4,opt,name=parent" json:"parent,omitempty"`
	Categories []*CreateQuestionRequest_Answer_Category `protobuf:"bytes,5,rep,name=categories" json:"categories,omitempty"`
}

func (m *CreateQuestionRequest_Answer_Category) Reset()         { *m = CreateQuestionRequest_Answer_Category{} }
func (m *CreateQuestionRequest_Answer_Category) String() string { return proto.CompactTextString(m) }
func (*CreateQuestionRequest_Answer_Category) ProtoMessage()    {}
func (*CreateQuestionRequest_Answer_Category) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0, 0}
}

func (m *CreateQuestionRequest_Answer_Category) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CreateQuestionRequest_Answer_Category) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateQuestionRequest_Answer_Category) GetOption() int32 {
	if m != nil {
		return m.Option
	}
	return 0
}

func (m *CreateQuestionRequest_Answer_Category) GetParent() int32 {
	if m != nil {
		return m.Parent
	}
	return 0
}

func (m *CreateQuestionRequest_Answer_Category) GetCategories() []*CreateQuestionRequest_Answer_Category {
	if m != nil {
		return m.Categories
	}
	return nil
}

type CreateQuestionRequest_Answer_Weight struct {
	Value  int32 `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
	Option int32 `protobuf:"varint,2,opt,name=option" json:"option,omitempty"`
}

func (m *CreateQuestionRequest_Answer_Weight) Reset()         { *m = CreateQuestionRequest_Answer_Weight{} }
func (m *CreateQuestionRequest_Answer_Weight) String() string { return proto.CompactTextString(m) }
func (*CreateQuestionRequest_Answer_Weight) ProtoMessage()    {}
func (*CreateQuestionRequest_Answer_Weight) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0, 1}
}

func (m *CreateQuestionRequest_Answer_Weight) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *CreateQuestionRequest_Answer_Weight) GetOption() int32 {
	if m != nil {
		return m.Option
	}
	return 0
}

type CreateQuestionRequest_Category struct {
	Id         int32                             `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name       string                            `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Parent     int32                             `protobuf:"varint,3,opt,name=parent" json:"parent,omitempty"`
	Categories []*CreateQuestionRequest_Category `protobuf:"bytes,4,rep,name=categories" json:"categories,omitempty"`
}

func (m *CreateQuestionRequest_Category) Reset()         { *m = CreateQuestionRequest_Category{} }
func (m *CreateQuestionRequest_Category) String() string { return proto.CompactTextString(m) }
func (*CreateQuestionRequest_Category) ProtoMessage()    {}
func (*CreateQuestionRequest_Category) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 1}
}

func (m *CreateQuestionRequest_Category) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CreateQuestionRequest_Category) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateQuestionRequest_Category) GetParent() int32 {
	if m != nil {
		return m.Parent
	}
	return 0
}

func (m *CreateQuestionRequest_Category) GetCategories() []*CreateQuestionRequest_Category {
	if m != nil {
		return m.Categories
	}
	return nil
}

type CreateQuestionRequest_Weight struct {
	Value int32 `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
}

func (m *CreateQuestionRequest_Weight) Reset()                    { *m = CreateQuestionRequest_Weight{} }
func (m *CreateQuestionRequest_Weight) String() string            { return proto.CompactTextString(m) }
func (*CreateQuestionRequest_Weight) ProtoMessage()               {}
func (*CreateQuestionRequest_Weight) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 2} }

func (m *CreateQuestionRequest_Weight) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type CreateQuestionResponse struct {
	Status     string                             `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Message    string                             `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Categories []*CreateQuestionResponse_Category `protobuf:"bytes,3,rep,name=categories" json:"categories,omitempty"`
}

func (m *CreateQuestionResponse) Reset()                    { *m = CreateQuestionResponse{} }
func (m *CreateQuestionResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateQuestionResponse) ProtoMessage()               {}
func (*CreateQuestionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateQuestionResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *CreateQuestionResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateQuestionResponse) GetCategories() []*CreateQuestionResponse_Category {
	if m != nil {
		return m.Categories
	}
	return nil
}

type CreateQuestionResponse_Category struct {
	Id          int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	WeightRange string `protobuf:"bytes,3,opt,name=weight_range,json=weightRange" json:"weight_range,omitempty"`
	Parent      int32  `protobuf:"varint,4,opt,name=parent" json:"parent,omitempty"`
	Level       int32  `protobuf:"varint,5,opt,name=level" json:"level,omitempty"`
}

func (m *CreateQuestionResponse_Category) Reset()         { *m = CreateQuestionResponse_Category{} }
func (m *CreateQuestionResponse_Category) String() string { return proto.CompactTextString(m) }
func (*CreateQuestionResponse_Category) ProtoMessage()    {}
func (*CreateQuestionResponse_Category) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1, 0}
}

func (m *CreateQuestionResponse_Category) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CreateQuestionResponse_Category) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateQuestionResponse_Category) GetWeightRange() string {
	if m != nil {
		return m.WeightRange
	}
	return ""
}

func (m *CreateQuestionResponse_Category) GetParent() int32 {
	if m != nil {
		return m.Parent
	}
	return 0
}

func (m *CreateQuestionResponse_Category) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

type GetQuestionRequest struct {
	AuthToken  string                     `protobuf:"bytes,1,opt,name=auth_token,json=authToken" json:"auth_token,omitempty"`
	QuestionId int32                      `protobuf:"varint,2,opt,name=question_id,json=questionId" json:"question_id,omitempty"`
	Answer     *GetQuestionRequest_Answer `protobuf:"bytes,3,opt,name=answer" json:"answer,omitempty"`
}

func (m *GetQuestionRequest) Reset()                    { *m = GetQuestionRequest{} }
func (m *GetQuestionRequest) String() string            { return proto.CompactTextString(m) }
func (*GetQuestionRequest) ProtoMessage()               {}
func (*GetQuestionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetQuestionRequest) GetAuthToken() string {
	if m != nil {
		return m.AuthToken
	}
	return ""
}

func (m *GetQuestionRequest) GetQuestionId() int32 {
	if m != nil {
		return m.QuestionId
	}
	return 0
}

func (m *GetQuestionRequest) GetAnswer() *GetQuestionRequest_Answer {
	if m != nil {
		return m.Answer
	}
	return nil
}

type GetQuestionRequest_Answer struct {
	Option1 bool `protobuf:"varint,1,opt,name=option1" json:"option1,omitempty"`
	Option2 bool `protobuf:"varint,2,opt,name=option2" json:"option2,omitempty"`
	Option3 bool `protobuf:"varint,3,opt,name=option3" json:"option3,omitempty"`
	Option4 bool `protobuf:"varint,4,opt,name=option4" json:"option4,omitempty"`
	Option5 bool `protobuf:"varint,5,opt,name=option5" json:"option5,omitempty"`
}

func (m *GetQuestionRequest_Answer) Reset()                    { *m = GetQuestionRequest_Answer{} }
func (m *GetQuestionRequest_Answer) String() string            { return proto.CompactTextString(m) }
func (*GetQuestionRequest_Answer) ProtoMessage()               {}
func (*GetQuestionRequest_Answer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

func (m *GetQuestionRequest_Answer) GetOption1() bool {
	if m != nil {
		return m.Option1
	}
	return false
}

func (m *GetQuestionRequest_Answer) GetOption2() bool {
	if m != nil {
		return m.Option2
	}
	return false
}

func (m *GetQuestionRequest_Answer) GetOption3() bool {
	if m != nil {
		return m.Option3
	}
	return false
}

func (m *GetQuestionRequest_Answer) GetOption4() bool {
	if m != nil {
		return m.Option4
	}
	return false
}

func (m *GetQuestionRequest_Answer) GetOption5() bool {
	if m != nil {
		return m.Option5
	}
	return false
}

type GetQuestionResponse struct {
	Status  string                      `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Message string                      `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Title   string                      `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Body    string                      `protobuf:"bytes,4,opt,name=body" json:"body,omitempty"`
	Score   float32                     `protobuf:"fixed32,5,opt,name=score" json:"score,omitempty"`
	Answer  *GetQuestionResponse_Answer `protobuf:"bytes,6,opt,name=answer" json:"answer,omitempty"`
}

func (m *GetQuestionResponse) Reset()                    { *m = GetQuestionResponse{} }
func (m *GetQuestionResponse) String() string            { return proto.CompactTextString(m) }
func (*GetQuestionResponse) ProtoMessage()               {}
func (*GetQuestionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetQuestionResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *GetQuestionResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetQuestionResponse) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *GetQuestionResponse) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *GetQuestionResponse) GetScore() float32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *GetQuestionResponse) GetAnswer() *GetQuestionResponse_Answer {
	if m != nil {
		return m.Answer
	}
	return nil
}

type GetQuestionResponse_Answer struct {
	Option1 string `protobuf:"bytes,1,opt,name=option1" json:"option1,omitempty"`
	Option2 string `protobuf:"bytes,2,opt,name=option2" json:"option2,omitempty"`
	Option3 string `protobuf:"bytes,3,opt,name=option3" json:"option3,omitempty"`
	Option4 string `protobuf:"bytes,4,opt,name=option4" json:"option4,omitempty"`
	Option5 string `protobuf:"bytes,5,opt,name=option5" json:"option5,omitempty"`
}

func (m *GetQuestionResponse_Answer) Reset()                    { *m = GetQuestionResponse_Answer{} }
func (m *GetQuestionResponse_Answer) String() string            { return proto.CompactTextString(m) }
func (*GetQuestionResponse_Answer) ProtoMessage()               {}
func (*GetQuestionResponse_Answer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3, 0} }

func (m *GetQuestionResponse_Answer) GetOption1() string {
	if m != nil {
		return m.Option1
	}
	return ""
}

func (m *GetQuestionResponse_Answer) GetOption2() string {
	if m != nil {
		return m.Option2
	}
	return ""
}

func (m *GetQuestionResponse_Answer) GetOption3() string {
	if m != nil {
		return m.Option3
	}
	return ""
}

func (m *GetQuestionResponse_Answer) GetOption4() string {
	if m != nil {
		return m.Option4
	}
	return ""
}

func (m *GetQuestionResponse_Answer) GetOption5() string {
	if m != nil {
		return m.Option5
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateQuestionRequest)(nil), "question.CreateQuestionRequest")
	proto.RegisterType((*CreateQuestionRequest_Answer)(nil), "question.CreateQuestionRequest.Answer")
	proto.RegisterType((*CreateQuestionRequest_Answer_Category)(nil), "question.CreateQuestionRequest.Answer.Category")
	proto.RegisterType((*CreateQuestionRequest_Answer_Weight)(nil), "question.CreateQuestionRequest.Answer.Weight")
	proto.RegisterType((*CreateQuestionRequest_Category)(nil), "question.CreateQuestionRequest.Category")
	proto.RegisterType((*CreateQuestionRequest_Weight)(nil), "question.CreateQuestionRequest.Weight")
	proto.RegisterType((*CreateQuestionResponse)(nil), "question.CreateQuestionResponse")
	proto.RegisterType((*CreateQuestionResponse_Category)(nil), "question.CreateQuestionResponse.Category")
	proto.RegisterType((*GetQuestionRequest)(nil), "question.GetQuestionRequest")
	proto.RegisterType((*GetQuestionRequest_Answer)(nil), "question.GetQuestionRequest.Answer")
	proto.RegisterType((*GetQuestionResponse)(nil), "question.GetQuestionResponse")
	proto.RegisterType((*GetQuestionResponse_Answer)(nil), "question.GetQuestionResponse.Answer")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Question service

type QuestionClient interface {
	// Create a new question
	CreateQuestion(ctx context.Context, in *CreateQuestionRequest, opts ...grpc.CallOption) (*CreateQuestionResponse, error)
	// Get next question
	GetQuestion(ctx context.Context, in *GetQuestionRequest, opts ...grpc.CallOption) (*GetQuestionResponse, error)
}

type questionClient struct {
	cc *grpc.ClientConn
}

func NewQuestionClient(cc *grpc.ClientConn) QuestionClient {
	return &questionClient{cc}
}

func (c *questionClient) CreateQuestion(ctx context.Context, in *CreateQuestionRequest, opts ...grpc.CallOption) (*CreateQuestionResponse, error) {
	out := new(CreateQuestionResponse)
	err := grpc.Invoke(ctx, "/question.Question/CreateQuestion", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *questionClient) GetQuestion(ctx context.Context, in *GetQuestionRequest, opts ...grpc.CallOption) (*GetQuestionResponse, error) {
	out := new(GetQuestionResponse)
	err := grpc.Invoke(ctx, "/question.Question/GetQuestion", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Question service

type QuestionServer interface {
	// Create a new question
	CreateQuestion(context.Context, *CreateQuestionRequest) (*CreateQuestionResponse, error)
	// Get next question
	GetQuestion(context.Context, *GetQuestionRequest) (*GetQuestionResponse, error)
}

func RegisterQuestionServer(s *grpc.Server, srv QuestionServer) {
	s.RegisterService(&_Question_serviceDesc, srv)
}

func _Question_CreateQuestion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateQuestionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuestionServer).CreateQuestion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/question.Question/CreateQuestion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuestionServer).CreateQuestion(ctx, req.(*CreateQuestionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Question_GetQuestion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetQuestionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuestionServer).GetQuestion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/question.Question/GetQuestion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuestionServer).GetQuestion(ctx, req.(*GetQuestionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Question_serviceDesc = grpc.ServiceDesc{
	ServiceName: "question.Question",
	HandlerType: (*QuestionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateQuestion",
			Handler:    _Question_CreateQuestion_Handler,
		},
		{
			MethodName: "GetQuestion",
			Handler:    _Question_GetQuestion_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "question.proto",
}

func init() { proto.RegisterFile("question.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 614 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x6d, 0xec, 0xd8, 0x71, 0x27, 0x28, 0x87, 0x21, 0x54, 0x56, 0x44, 0x69, 0x30, 0x08, 0x85,
	0x03, 0x41, 0xa4, 0x0d, 0x17, 0x10, 0x12, 0xea, 0xa1, 0x54, 0x42, 0x42, 0xac, 0x40, 0x1c, 0x23,
	0xb7, 0x59, 0xa5, 0x16, 0xa9, 0x1d, 0xec, 0x4d, 0xab, 0x9e, 0xb8, 0x73, 0x40, 0x9c, 0x38, 0xf2,
	0x0b, 0xfc, 0x0b, 0x1f, 0xc2, 0x37, 0x20, 0xcf, 0xee, 0x3a, 0x76, 0x88, 0x93, 0xb4, 0x95, 0x7a,
	0xcb, 0x9b, 0xf1, 0xac, 0xdf, 0x3c, 0xbd, 0x7d, 0x0e, 0x34, 0xbe, 0x4c, 0x79, 0x22, 0x82, 0x28,
	0xec, 0x4e, 0xe2, 0x48, 0x44, 0xe8, 0x68, 0xec, 0xfd, 0xad, 0xc1, 0x9d, 0xfd, 0x98, 0xfb, 0x82,
	0xbf, 0x57, 0x25, 0xc6, 0xa9, 0x89, 0xdb, 0x00, 0xfe, 0x54, 0x9c, 0x0c, 0x44, 0xf4, 0x99, 0x87,
	0x6e, 0xa5, 0x5d, 0xe9, 0x6c, 0xb2, 0xcd, 0xb4, 0xf2, 0x21, 0x2d, 0x60, 0x13, 0x2c, 0x11, 0x88,
	0x31, 0x77, 0x0d, 0xea, 0x48, 0x80, 0x08, 0xd5, 0xa3, 0x68, 0x78, 0xe1, 0x9a, 0x54, 0xa4, 0xdf,
	0xf8, 0x0a, 0x6c, 0x3f, 0x4c, 0xce, 0x79, 0xec, 0x56, 0xdb, 0x95, 0x4e, 0xbd, 0xf7, 0xa8, 0x9b,
	0xb1, 0x59, 0xf8, 0xe6, 0xee, 0x6b, 0x7a, 0x9a, 0xa9, 0xa9, 0x74, 0xfe, 0x9c, 0x07, 0xa3, 0x13,
	0xe1, 0x5a, 0xeb, 0xcd, 0x7f, 0xa2, 0xa7, 0x99, 0x9a, 0xc2, 0x37, 0x00, 0xc7, 0xbe, 0xe0, 0xa3,
	0x28, 0x0e, 0x78, 0xe2, 0xda, 0x6d, 0xb3, 0x53, 0xef, 0x75, 0x56, 0x9d, 0xb1, 0x2f, 0x27, 0x2e,
	0x58, 0x6e, 0xb6, 0xf5, 0xbd, 0x0a, 0xb6, 0x24, 0x87, 0x2e, 0xd4, 0xa2, 0x49, 0x3a, 0xf0, 0x4c,
	0x49, 0xa3, 0xe1, 0xac, 0xd3, 0x53, 0xd2, 0x68, 0x38, 0xeb, 0xec, 0x2a, 0x7d, 0x34, 0x9c, 0x75,
	0xf6, 0x48, 0xa3, 0xac, 0xb3, 0x37, 0xeb, 0xf4, 0x69, 0xfb, 0xac, 0xd3, 0xc7, 0x03, 0xa8, 0xc9,
	0x05, 0xf5, 0x4e, 0x4f, 0xd6, 0xd3, 0x55, 0xcb, 0xa3, 0xa7, 0xf1, 0x5d, 0x41, 0x9f, 0x1a, 0x9d,
	0xf5, 0x74, 0xcd, 0xb3, 0x16, 0xca, 0xf4, 0xbb, 0x02, 0x8e, 0x6e, 0x60, 0x03, 0x8c, 0x60, 0x48,
	0x1a, 0x59, 0xcc, 0x08, 0x86, 0xa9, 0x43, 0x42, 0xff, 0x54, 0xdb, 0x86, 0x7e, 0xe3, 0x16, 0xd8,
	0x72, 0x2b, 0xd2, 0xc5, 0x62, 0x0a, 0xa5, 0xf5, 0x89, 0x1f, 0xf3, 0x50, 0x90, 0x2a, 0x16, 0x53,
	0x68, 0x8e, 0xb1, 0x75, 0x7d, 0xc6, 0xcf, 0xc1, 0x96, 0xaa, 0xa4, 0xb6, 0x3e, 0xf3, 0xc7, 0x53,
	0xae, 0x18, 0x4b, 0x90, 0x23, 0x68, 0xe4, 0x09, 0xb6, 0x7e, 0x5c, 0x61, 0x53, 0xb5, 0x91, 0x59,
	0xd8, 0xa8, 0xe8, 0xd1, 0xea, 0x35, 0x3c, 0x7a, 0x6f, 0xf9, 0x2a, 0xde, 0x4f, 0x03, 0xb6, 0xe6,
	0x8f, 0x4b, 0x26, 0x51, 0x98, 0x10, 0xb9, 0x44, 0xf8, 0x62, 0x9a, 0x28, 0x4b, 0x2b, 0x94, 0x7a,
	0xf0, 0x94, 0x27, 0x89, 0x3f, 0xd2, 0xbb, 0x68, 0x88, 0x87, 0x05, 0xda, 0x26, 0xd1, 0x7e, 0x5c,
	0x4e, 0x5b, 0xbe, 0x67, 0x31, 0xef, 0xaf, 0x97, 0x54, 0xf2, 0x3e, 0xdc, 0x92, 0x06, 0x1e, 0xc4,
	0x7e, 0x38, 0xe2, 0xea, 0x46, 0xd5, 0x65, 0x8d, 0xa5, 0xa5, 0x52, 0xfb, 0x34, 0xc1, 0x1a, 0xf3,
	0x33, 0x3e, 0xa6, 0x1b, 0x65, 0x31, 0x09, 0xbc, 0x5f, 0x06, 0xe0, 0x01, 0x17, 0x97, 0x8c, 0xc1,
	0x1d, 0xa8, 0xeb, 0x75, 0x07, 0xc1, 0x50, 0xd9, 0x03, 0x74, 0xe9, 0x70, 0x88, 0x2f, 0xb2, 0xf4,
	0x33, 0x29, 0xbd, 0x1e, 0xcc, 0xe4, 0xf9, 0xff, 0x6d, 0x73, 0xd1, 0xd7, 0xfa, 0x56, 0x29, 0x0b,
	0x1c, 0xa7, 0x34, 0x70, 0x9c, 0xd2, 0xc0, 0x71, 0x4a, 0x03, 0xc7, 0x29, 0x0d, 0x9c, 0xac, 0xd3,
	0xf7, 0xfe, 0x18, 0x70, 0xbb, 0x40, 0xf9, 0xca, 0xb6, 0xc9, 0xbe, 0x1d, 0xe6, 0xa2, 0x6f, 0x47,
	0x35, 0xf7, 0xed, 0x68, 0x82, 0x95, 0x1c, 0x47, 0x31, 0x27, 0x2e, 0x06, 0x93, 0x00, 0x5f, 0x66,
	0x9a, 0xda, 0xa4, 0xe9, 0xc3, 0x12, 0x4d, 0x95, 0xdf, 0xd6, 0x16, 0xf5, 0xe6, 0x53, 0xbc, 0x97,
	0x66, 0xa5, 0x26, 0x8c, 0x1f, 0xa1, 0x51, 0xbc, 0x32, 0xb8, 0xb3, 0x22, 0x03, 0x5a, 0xed, 0x55,
	0xb7, 0xcd, 0xdb, 0xc0, 0xb7, 0x50, 0xcf, 0xc9, 0x82, 0x77, 0x97, 0x39, 0xb0, 0xb5, 0xbd, 0x54,
	0x4b, 0x6f, 0xe3, 0xc8, 0xa6, 0xbf, 0x10, 0xbb, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0xfb, 0x08,
	0xe0, 0xd1, 0x54, 0x08, 0x00, 0x00,
}
